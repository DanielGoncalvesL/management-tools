name: Continuous Integration

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
      - name: Node.js Setup
        uses: actions/setup-node@v2
      - name: Installation of Node.js dependencies
        run: yarn
      - name: Build
        run: yarn build

  lint:
    runs-on: ubuntu-20.04

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
      - name: Node.js Setup
        uses: actions/setup-node@v2
      - name: Installation of Node.js dependencies
        run: yarn
      - name: Lint
        run: yarn lint

  tests:
    needs: [build, lint]

    runs-on: ubuntu-20.04

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
      - name: Node.js Setup
        uses: actions/setup-node@v2
      - name: Installation of Node.js dependencies
        run: yarn
      - name: Tests
        run: yarn test:ci
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "tests/coverage/lcov.info"
      - uses: actions/upload-artifact@v2
        with:
          name: codeCoverage
          retention-days: 1
          path: tests/coverage/lcov.info

  tests-mutation:
    needs: [tests]

    runs-on: ubuntu-20.04

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
      - name: Node.js Setup
        uses: actions/setup-node@v2
      - name: Installation of Node.js dependencies
        run: yarn
      - name: Mutation tests
        run: yarn test:mutation
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
          BRANCH: ${{ env.GITHUB_REF_SLUG }}

  sonarcloud:
    needs: [tests, tests-mutation]

    name: SonarCloud

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download code coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: codeCoverage
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  push-docker-image:
    if: github.ref == 'refs/heads/main'
    needs: [sonarcloud]

    name: Push Docker image to multiple registries
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            danielgl05/management-tools
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [sonarcloud]

    runs-on: ubuntu-20.04

    steps:
      - name: Project checkout
        uses: actions/checkout@v2
      - name: Deploy app on Heroku (https://management-tools.herokuapp.com/docs-api/)
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "management-tools"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
