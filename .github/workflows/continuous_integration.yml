name: Continuous Integration

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Project checkout
      uses: actions/checkout@v2
    - name: Node.js Setup
      uses: actions/setup-node@v2
    - name: Installation of Node.js dependencies
      run: yarn
    - name: Build
      run: yarn build

  lint:
    runs-on: ubuntu-20.04

    steps:
    - name: Project checkout
      uses: actions/checkout@v2
    - name: Node.js Setup
      uses: actions/setup-node@v2
    - name: Installation of Node.js dependencies
      run: yarn
    - name: Lint
      run: yarn lint

  tests:
    needs: [build, lint]

    runs-on: ubuntu-20.04

    steps:
    - name: Project checkout
      uses: actions/checkout@v2
    - name: Node.js Setup
      uses: actions/setup-node@v2
    - name: Installation of Node.js dependencies
      run: yarn
    - name: Tests
      run: yarn test:ci
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: 'tests/coverage/lcov.info'
    - uses: actions/upload-artifact@v2
      with:
        name: codeCoverage
        retention-days: 1
        path: tests/coverage/lcov.info

  tests-mutation:
    needs: [build, lint]

    runs-on: ubuntu-20.04

    steps:
    - name: Project checkout
      uses: actions/checkout@v2
    - name: Node.js Setup
      uses: actions/setup-node@v2
    - name: Installation of Node.js dependencies
      run: yarn
    - name: Mutation tests
      run: yarn test:mutation
      env:
        STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        BRANCH: ${{ env.GITHUB_REF_SLUG }}

  sonarcloud:
    needs: [tests, tests-mutation]

    name: SonarCloud

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download code coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: codeCoverage
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [sonarcloud]

    runs-on: ubuntu-20.04

    steps:
    - name: Project checkout
      uses: actions/checkout@v2
    - name: Deploy app on Heroku (https://management-tools.herokuapp.com/docs-api/)
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "management-tools"
        heroku_email: ${{secrets.HEROKU_EMAIL}}
